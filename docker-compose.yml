services:
  zookeeper:
    image: bitnami/zookeeper:3.9
    container_name: zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:3.7
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_HOST://0.0.0.0:19092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:19092
      ALLOW_PLAINTEXT_LISTENER: "yes"
    ports:
      - "19092:19092"

  ingestor:
    build: ./ingestor
    container_name: ingestor
    environment:
      SYMBOLS: "BTCUSDT"
      TOTAL_REPLICAS: 1
      POD_ORDINAL: 0
      PARTITIONS: 1
      KAFKA_BOOTSTRAP: "kafka:9092"
    depends_on:
      - kafka
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/alive" ]
      interval: 30s
      timeout: 3s
      retries: 3

  jobmanager:
    build:
      context: .
      dockerfile: Dockerfile.flink-state
    image: my-flink-state
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    ports:
      - "8081:8081"   # Flink UI
    volumes:
      - ./state-backend:/state-backend

  taskmanager:
    build:
      context: .
      dockerfile: Dockerfile.flink-state
    image: my-flink-state
    command: taskmanager
    environment:
      JOB_MANAGER_RPC_ADDRESS: jobmanager
#      FLINK_PROPERTIES: |
#        taskmanager.numberOfTaskSlots: 2

    depends_on: [jobmanager]
    volumes:
      - ./state-backend:/state-backend

  processor:
    build:
      context: .
      dockerfile: processor/Dockerfile
    environment:
      KAFKA_BOOTSTRAP: "kafka:9092"
      CONNECTOR_JAR: "/app/jars/flink-sql-connector-kafka-3.0.2-1.18.jar"
      STATE_DIR: "file:///state-backend"
      JOB_MANAGER_RPC_ADDRESS: jobmanager
    volumes:
      - ./state-backend:/state-backend
    depends_on:
      - kafka
      - jobmanager
      - taskmanager

volumes:
  state_backend: {}
  processor_state:

